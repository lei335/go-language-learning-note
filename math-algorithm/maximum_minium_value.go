package algo

import (
	"fmt"
	"math"
)

// go标准库中有int/uint类型的最大最小值，可直接math.MAX...获取

func value() {
	a := math.MaxUint32 // 2^32-1，最高位不是符号位，有多少位数值位n，那么其最大值就为2^n-1

	b := math.MaxInt32 // 2^31-1，最高位是符号位0，其余位为1
	c := math.MinInt32 // -1*2^31, 最高位是符号位1，其余位为0. 
	// 因为原码表示法中，最小值应该为-1*(2^31-1)，
	// 但负数中0000...00表示数字0,1000...000不表示数字0，它表示最小值-1*(2^31-1)+(-1)=-1*(2^31)

	fmt.Println(a, b, c)
}

// 正数的原码、反码、补码都是它本身；
// 0的原码、补码是它本身（000...000），反码有两种表示方法：100...000(表示-0)；000...000(表示+0)
// 负数的原码是最高位为1，其余数值位是它的绝对值；反码是原码的符号位不变，数值位按位取反；补码是其反码加上1